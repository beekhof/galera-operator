/*
Copyright 2017 The etcd-operator Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was automatically generated by lister-gen

package v1alpha1

import (
	v1alpha1 "github.com/coreos/etcd-operator/pkg/apis/galera/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// GaleraBackupLister helps list GaleraBackups.
type GaleraBackupLister interface {
	// List lists all GaleraBackups in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.GaleraBackup, err error)
	// GaleraBackups returns an object that can list and get GaleraBackups.
	GaleraBackups(namespace string) GaleraBackupNamespaceLister
	GaleraBackupListerExpansion
}

// galeraBackupLister implements the GaleraBackupLister interface.
type galeraBackupLister struct {
	indexer cache.Indexer
}

// NewGaleraBackupLister returns a new GaleraBackupLister.
func NewGaleraBackupLister(indexer cache.Indexer) GaleraBackupLister {
	return &galeraBackupLister{indexer: indexer}
}

// List lists all GaleraBackups in the indexer.
func (s *galeraBackupLister) List(selector labels.Selector) (ret []*v1alpha1.GaleraBackup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GaleraBackup))
	})
	return ret, err
}

// GaleraBackups returns an object that can list and get GaleraBackups.
func (s *galeraBackupLister) GaleraBackups(namespace string) GaleraBackupNamespaceLister {
	return galeraBackupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// GaleraBackupNamespaceLister helps list and get GaleraBackups.
type GaleraBackupNamespaceLister interface {
	// List lists all GaleraBackups in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.GaleraBackup, err error)
	// Get retrieves the GaleraBackup from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.GaleraBackup, error)
	GaleraBackupNamespaceListerExpansion
}

// galeraBackupNamespaceLister implements the GaleraBackupNamespaceLister
// interface.
type galeraBackupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all GaleraBackups in the indexer for a given namespace.
func (s galeraBackupNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.GaleraBackup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GaleraBackup))
	})
	return ret, err
}

// Get retrieves the GaleraBackup from the indexer for a given namespace and name.
func (s galeraBackupNamespaceLister) Get(name string) (*v1alpha1.GaleraBackup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("galerabackup"), name)
	}
	return obj.(*v1alpha1.GaleraBackup), nil
}
