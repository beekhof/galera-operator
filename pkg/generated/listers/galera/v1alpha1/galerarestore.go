/*
Copyright 2017 The etcd-operator Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was automatically generated by lister-gen

package v1alpha1

import (
	v1alpha1 "github.com/coreos/etcd-operator/pkg/apis/galera/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// GaleraRestoreLister helps list GaleraRestores.
type GaleraRestoreLister interface {
	// List lists all GaleraRestores in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.GaleraRestore, err error)
	// GaleraRestores returns an object that can list and get GaleraRestores.
	GaleraRestores(namespace string) GaleraRestoreNamespaceLister
	GaleraRestoreListerExpansion
}

// galeraRestoreLister implements the GaleraRestoreLister interface.
type galeraRestoreLister struct {
	indexer cache.Indexer
}

// NewGaleraRestoreLister returns a new GaleraRestoreLister.
func NewGaleraRestoreLister(indexer cache.Indexer) GaleraRestoreLister {
	return &galeraRestoreLister{indexer: indexer}
}

// List lists all GaleraRestores in the indexer.
func (s *galeraRestoreLister) List(selector labels.Selector) (ret []*v1alpha1.GaleraRestore, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GaleraRestore))
	})
	return ret, err
}

// GaleraRestores returns an object that can list and get GaleraRestores.
func (s *galeraRestoreLister) GaleraRestores(namespace string) GaleraRestoreNamespaceLister {
	return galeraRestoreNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// GaleraRestoreNamespaceLister helps list and get GaleraRestores.
type GaleraRestoreNamespaceLister interface {
	// List lists all GaleraRestores in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.GaleraRestore, err error)
	// Get retrieves the GaleraRestore from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.GaleraRestore, error)
	GaleraRestoreNamespaceListerExpansion
}

// galeraRestoreNamespaceLister implements the GaleraRestoreNamespaceLister
// interface.
type galeraRestoreNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all GaleraRestores in the indexer for a given namespace.
func (s galeraRestoreNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.GaleraRestore, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GaleraRestore))
	})
	return ret, err
}

// Get retrieves the GaleraRestore from the indexer for a given namespace and name.
func (s galeraRestoreNamespaceLister) Get(name string) (*v1alpha1.GaleraRestore, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("galerarestore"), name)
	}
	return obj.(*v1alpha1.GaleraRestore), nil
}
